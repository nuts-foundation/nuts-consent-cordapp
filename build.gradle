/*
 *     Nuts consent cordapp
 *     Copyright (C) 2019 Nuts community
 *
 *     This program is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     This program is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

buildscript {
    ext {
        kotlinVersion = '1.2.71'
        corda = '4.1'
        cordaGradlePluginsVersion = '4.0.25'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "net.corda.plugins:cordapp:$cordaGradlePluginsVersion"
        classpath "net.corda.plugins:cordformation:$cordaGradlePluginsVersion"
    }
}

ext {
    jacksonVersion = '2.9.8'
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url "https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases/"
        }

        maven {
            url "https://repo.gradle.org/gradle/libs-releases-local/"
        }
    }

    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'maven'
    apply plugin: 'kotlin'
    apply plugin: 'net.corda.plugins.cordapp'
    apply plugin: 'jacoco'
    apply plugin: 'signing'

    version = "0.8.1"
    group = "nl.nuts.consent.cordapp"
    cordapp.info.vendor = "Nuts community"

    configurations {
        implementation {
            exclude group: 'net.corda', module: 'corda-tools-cliutils'
            exclude group: 'com.github.corda.crash', module: 'crash.shell'
            exclude group: 'com.github.corda.crash', module: 'crash.connectors.ssh'
            exclude group: 'com.github.bft-smart', module: 'library'
            exclude group: 'org.apache.logging.log4j', module: 'log4j-slf4j-impl'
        }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            languageVersion = "1.2"
            apiVersion = "1.2"
            jvmTarget = "1.8"
            javaParameters = true   // Useful for reflection.
        }
    }
    test {
        jvmArgs "-javaagent:${project.rootDir}/lib/quasar.jar",
                "-Dco.paralleluniverse.fibers.verifyInstrumentation=false"
    }
    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    signing {
        required { gradle.taskGraph.hasTask("uploadArchives") }

        if (project.hasProperty('ossrhUsername')) {
            useGpgCmd()
        }
        sign configurations.archives
    }

    uploadArchives {
        if (!project.hasProperty('ossrhUsername')) {
            project.ext.ossrhUsername = "not_used"
            project.ext.ossrhPassword = "not_used"
        }

        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(
                            userName: project.properties['ossrhUsername'],
                            password: project.properties['ossrhPassword'],
                    )
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(
                            userName: project.properties['ossrhUsername'],
                            password: project.properties['ossrhPassword'],
                    )
                }

                pom.project {
                    name "${project.name}"
                    description "Shared libs from the Nuts consent cordapp used in Nuts consent bridge"
                    url "https://github.com/nuts-foundation/nuts-consent-cordapp/"
                    packaging 'jar'

                    scm {
                        connection 'scm:git:https://github.com/nuts-foundation/nuts-consent-cordapp/'
                        developerConnection 'scm:git:https://github.com/nuts-foundation/nuts-consent-cordapp/'
                        url 'https://github.com/nuts-foundation/nuts-consent-cordapp/'
                    }

                    licenses {
                        license {
                            name 'GNU General Public License V3'
                            url 'https://www.gnu.org/licenses/gpl-3.0.html'
                        }
                    }

                    developers {
                        developer {
                            id 'wout'
                            name 'Wout Slakhorst'
                            email 'wout.slakhorst@nuts.nl'
                        }
                    }
                }
            }
        }
    }
}

dependencies {
    cordapp project(":flows")
}

task codeCoverageReport(type: JacocoReport) {
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/report.xml")
        html.enabled true
        html.destination file("${buildDir}/reports/jacoco/html")
        csv.enabled false
    }

    subprojects.each {
        sourceSets it.sourceSets.main
    }
}

//change to dependsOn check when IT are added
codeCoverageReport.dependsOn {
    subprojects*.test
}
